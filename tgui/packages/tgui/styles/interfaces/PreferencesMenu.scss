@use 'sass:color';
@use 'sass:map';
@use '../components/Button.scss';
@use '../colors.scss';

$department_map: (
  'Assistant': colors.$grey,
  'Captain': colors.fg(colors.$blue),
  'Cargo': colors.$brown,
  'Command': colors.$yellow,
  'Security': colors.$red,
  'Engineering': colors.$orange,
  'Medical': colors.$teal,
  'Science': colors.fg(colors.$purple),
  'Service': colors.$green,
  'Silicon': colors.$pink,
);

.PreferencesMenu {

  &__Jobs {
    > * {
      flex: 1;
    }

    &__departments {
      @each $department-name, $color-value in $department_map {
        &--#{$department-name} {
          &.head {
            background: $color-value;

            .job-name {
              font-weight: bold;
            }
          }

          background: colors.fg($color-value);
          border-bottom: 2px solid rgba(0, 0, 0, 0.3);
          border-left: 2px solid rgba(0, 0, 0, 0.3);
          border-right: 2px solid rgba(0, 0, 0, 0.3);
          color: black;

          > * {
            height: calc(100% + 0.2em);
            padding-bottom: 0.2em;
          }

          &:first-child {
            border-top: 2px solid rgba(0, 0, 0, 0.3);
          }

          .options {
            background: rgba(0, 0, 0, 0.2);
            height: 100%;
          }
        }

        &--Captain {
          border: 3px solid rgba(200, 200, 0, 1);

          &:first-child {
            border-top: 3px solid rgba(200, 200, 0, 1);
          }

          .job-name {
            font-size: 17px;
          }
        }
      }

      &__priority {
        border: 1px solid rgba(0, 0, 0, 0.3);

        &--off::after {
          content: "";

          background: rgba(0, 0, 0, 0.2);
          display: block;
          height: 80%;
          left: 50%;
          position: relative;
          top: 50%;
          transform: translateX(-50%) translateY(-50%) rotate(40deg);
          width: 2px;
        }
      }
    }

    &__PriorityHeader {
      font-weight: bold;
      transform:
        translateX(-4px)
        translateY(-8px)
        rotate(315deg);
      white-space: nowrap;
      width: 19px;
    }
  }

  &__Quirks {
    &__QuirkList {
      background-color: colors.$light-grey;
      height: calc(90vh - 170px);
      min-height: 100%;
      overflow-y: scroll;

      &__quirk {
        background-color: colors.$white;
        border-bottom: 1px solid black;
        color: #111;
        transition: background-color 0.1s ease-in;

        $quality_map: (
          "positive": colors.$green,
          "neutral": colors.$white,
          "negative": colors.$red,
        );

        @each $quality, $color-value in $quality_map {
          &--#{$quality} {
            background-color: $color-value;
            transition: background-color 0.1s ease-in;
          }
        }

        &:hover {
          background-color: colors.$grey;
          transition: background-color 0.1s ease-out;

          @each $quality, $color-value in $quality_map {
            .PreferencesMenu__Quirks__QuirkList__quirk--#{$quality} {
              background-color: color.scale($color-value, $lightness: -25%);
              transition: background-color 0.1s ease-out;
            }
          }
        }
      }
    }
  }
}
